{"mappings":"AAAA,eAAe;AACf,MAAM,SAAS,GAAG,QAAQ,CAAC,aAAa,CAAC,SAAS,CAAC,AAAC;AACpD,MAAM,cAAc,GAAG,QAAQ,CAAC,gBAAgB,CAAC,aAAa,CAAC,AAAC;AAChE,MAAM,aAAa,GAAG,QAAQ,CAAC,gBAAgB,CAAC,YAAY,CAAC,AAAC;AAC9D,MAAM,cAAc,GAAG,QAAQ,CAAC,aAAa,CAAC,kBAAkB,CAAC,AAAC;AAElE,MAAM,OAAO,GAAG,CAAA,IAAI,GAAI;IACtB,IAAI,IAAI,EAAE;QACR,eAAe;QACf,EAAE,CAAC,UAAU,CAAC,OAAO,CAAC,CACnB,GAAG,CAAC,IAAI,CAAC,GAAG,CAAC,CACb,GAAG,EAAE,CACL,IAAI,CAAC,CAAA,GAAG,GAAI;YACX,MAAM,IAAI,GAAG,CAAC;0BACI,EAAE,IAAI,CAAC,KAAK,CAAC;aAC1B,EAAE,GAAG,CAAC,IAAI,EAAE,CAAC,GAAG,CAAC;MACxB,CAAC,AAAC;YACA,cAAc,CAAC,SAAS,GAAG,IAAI,CAAC;SACjC,CAAC,CAAC;QACL,0BAA0B;QAC1B,aAAa,CAAC,OAAO,CAAC,CAAA,IAAI,GAAK,IAAI,CAAC,KAAK,CAAC,OAAO,GAAG,OAAO,AAAC,CAAC,CAAC;QAC9D,cAAc,CAAC,OAAO,CAAC,CAAA,IAAI,GAAK,IAAI,CAAC,KAAK,CAAC,OAAO,GAAG,MAAM,AAAC,CAAC,CAAC;KAC/D,MAAM;QACL,qBAAqB;QACrB,cAAc,CAAC,SAAS,GAAG,EAAE,CAAC;QAC9B,uBAAuB;QACvB,aAAa,CAAC,OAAO,CAAC,CAAA,IAAI,GAAK,IAAI,CAAC,KAAK,CAAC,OAAO,GAAG,MAAM,AAAC,CAAC,CAAC;QAC7D,cAAc,CAAC,OAAO,CAAC,CAAA,IAAI,GAAK,IAAI,CAAC,KAAK,CAAC,OAAO,GAAG,OAAO,AAAC,CAAC,CAAC;KAChE;CACF,AAAC;AAEF,eAAe;AACf,MAAM,WAAW,GAAG,CAAA,IAAI,GAAI;IAC1B,IAAI,IAAI,CAAC,MAAM,EAAE;QACf,IAAI,IAAI,GAAG,EAAE,AAAC;QACd,IAAI,CAAC,OAAO,CAAC,CAAA,GAAG,GAAI;YAClB,MAAM,KAAK,GAAG,GAAG,CAAC,IAAI,EAAE,AAAC;YACzB,MAAM,EAAE,GAAG,CAAC;;0DAEwC,EAAE,KAAK,CAAC,KAAK,CAAC;+CACzB,EAAE,KAAK,CAAC,OAAO,CAAC;;MAEzD,CAAC,AAAC;YACF,IAAI,IAAI,EAAE,CAAC;SACZ,CAAC,CAAC;QACH,SAAS,CAAC,SAAS,GAAG,IAAI,CAAC;KAC5B;CACF,AAAC;AAEF,+BAA+B;AAC/B,QAAQ,CAAC,gBAAgB,CAAC,kBAAkB,EAAE,WAAY;IACxD,MAAM,MAAM,GAAG,QAAQ,CAAC,gBAAgB,CAAC,QAAQ,CAAC,AAAC;IACnD,CAAC,CAAC,KAAK,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;IAErB,MAAM,KAAK,GAAG,QAAQ,CAAC,gBAAgB,CAAC,cAAc,CAAC,AAAC;IACxD,CAAC,CAAC,WAAW,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;CAC3B,CAAC,CAAC","sources":["src/js/firebase.js"],"sourcesContent":["// DOM elements\nconst guideList = document.querySelector('.guides');\nconst loggedOutLinks = document.querySelectorAll('.logged-out');\nconst loggedInLinks = document.querySelectorAll('.logged-in');\nconst accountDetails = document.querySelector('.account-details');\n\nconst setupUI = user => {\n  if (user) {\n    // account info\n    db.collection('users')\n      .doc(user.uid)\n      .get()\n      .then(doc => {\n        const html = `\n        <div>Logged in as ${user.email}</div>\n        <div>${doc.data().bio}</div>\n      `;\n        accountDetails.innerHTML = html;\n      });\n    // toggle user UI elements\n    loggedInLinks.forEach(item => (item.style.display = 'block'));\n    loggedOutLinks.forEach(item => (item.style.display = 'none'));\n  } else {\n    // clear account info\n    accountDetails.innerHTML = '';\n    // toggle user elements\n    loggedInLinks.forEach(item => (item.style.display = 'none'));\n    loggedOutLinks.forEach(item => (item.style.display = 'block'));\n  }\n};\n\n// setup guides\nconst setupGuides = data => {\n  if (data.length) {\n    let html = '';\n    data.forEach(doc => {\n      const guide = doc.data();\n      const li = `\n        <li>\n          <div class=\"collapsible-header grey lighten-4\"> ${guide.title} </div>\n          <div class=\"collapsible-body white\"> ${guide.content} </div>\n        </li>\n      `;\n      html += li;\n    });\n    guideList.innerHTML = html;\n  }\n};\n\n// setup materialize components\ndocument.addEventListener('DOMContentLoaded', function () {\n  const modals = document.querySelectorAll('.modal');\n  M.Modal.init(modals);\n\n  const items = document.querySelectorAll('.collapsible');\n  M.Collapsible.init(items);\n});\n"],"names":[],"version":3,"file":"index.60d47bb7.js.map","sourceRoot":"/__parcel_source_root/"}